---
title: Hands on Rails Test Demo
---
##### Set up
~~~
rails new railstestdemo
cd railstestdemo
~~~

##### Add to gemfiles
~~~
gem 'pry-byebug'
gem 'better_errors'
gem 'binding_of_caller'
gem 'minitest-rails'
bundle
~~~

#### Add to config/application.rb
<%= ruby_begin %>
config.generators do |g|
  g.test_framework :minitest, spec: true
end
<%= ruby_end %>

#### Add and test a model
~~~
rails generate minitest:install
rails generate model word eng:string ned:string
rake db:migrate
~~~


##### See what rake tasks are present
~~~
rails -T
~~~

##### Add some more tests
~~~
it "stores a translation" do
  word = Word.new(eng: "house", ned: "huis")
  word.eng.must_equal "house"
  word.ned.must_equal "huis"
end
~~~

##### One way to add fixtures
~~~
before do
  Word.destroy_all
  Word.create(eng: "house", ned: "huis")
  Word.create(eng: "boat", ned: "boot")
end
~~~

##### And see if words model can be persisted
~~~
it "has two words in database" do
  Word.count.must_equal 2
end

it "can accept a new word" do
  Word.create(eng: "shoe", ned: "schoen")
  Word.count.must_equal 3
end
~~~

##### Add a validation to the model
~~~
class Word < ActiveRecord::Base
  validates :eng, presence: true
  validates :ned, presence: true
end
~~~

##### Add a test for the validation
~~~
it "cannot save a word without the english and dutch text" do
  w = Word.create(eng: "university")
  w.valid?.must_equal false
end
~~~

##### Test the Word.random method
~~~
it "Can return a random word" do
  w = Word.random
  w.must_be_kind_of Word
end
~~~

#### Implement the Word.random method
~~~
def self.random
  offset = rand(Word.count)
  Word.offset(offset).first
end
~~~

#### Add and test a controller
~~~
rails generate controller Words random
~~~

##### First write the test for the learn action
~~~
require_relative '../test_helper'

describe class WordsController < ApplicationController do
  it "handles random action" do
    get words_random_url
    assert_response :success
  end
end
~~~

##### Now actually implement the action in the WordsController
~~~
class WordsController < ApplicationController
  def random
    @word = Word.random
  end
end
~~~

##### And the view:
~~~
<h1>Words#random</h1>

<h2>A random Word:</h2>

<p>Dutch: <%%= @randword.ned %></p>
<p>English: <%%= @randword.eng %> </p>
~~~

#### References
* [RoR Guide about testing](http://guides.rubyonrails.org/testing.html)
