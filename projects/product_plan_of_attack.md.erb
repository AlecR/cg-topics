---
title: Project Roadmap
---
#### General Background

##### Planning functionality for Showcase Day Version (SDV)
* Instead of a final, this course will have a Showcase day where everyone presents and demos their products
* You will need to plan this Showcase Day Version of your product (SDV)
  * Think of this as the absolute minimum demo of your product that you want to have working by the product showcase. 
  * What is the essential coolness of your product? Can you demo that?
  * Remember a perfect login or user settings page is not essential coolness.
  * Think of the aha reaction you want in the viewer. 
  * Remember you can always exceed that!
* Narrow your focus!
  * Make a detailed mockup/paper prototype of your 1 or at most 2 core views your SDV will require
  * Detailed not because it has beautiful colors but because it covers the layout AND interactions that will work.
  * Everything from here on should be support that core view and nothing more!
  * Divide and conquer! Make sure each team member has a distinct deliverable!
  * Dig into the difficult things - don't avoid them in favor of the easy things!

##### The walking skeleton
* One of the principles of Agile development is to have running code as soonb as possible and all the time
* Sometime in 2 or so weeks you will have completed your "walking skeleton" version of the product
* It's called that because it will do almost nothing, just simply 'stand up'
* It might show one or two screens that does one little thing with a database with just one or two tables.
* It's purpose is to prove that you've gotten *something* running.

#### Roadmap
#### Towards the "Walking Skeleton"
1. Setup a git repo for your team
1. Setup Trello and write down stories:prioritized
1. Decide informally what the "Walking Skeleton" will include
1. Get it running on your personal computers, checked into Git
1. Get it deployed in the cloud on Heroku

#### Towards the SDV
1. Prepare a paper prototype of the key screens of your SDV
1. Identify and describe your key views and models
1. Work out your URL scheme and build the routes
1. Use rails generators to generate scaffolding for your key models and views
1. Database up and running (focus on core views)
1. Identify what gems you need and learn them
1. If you have to, build a "fake" login process
1. Build up some interesting demonstration data to show off your product.
1. Write tests
1. Use ActiveAdmin to quickly get an admnin UI to all your data
1. Use Bootstrap for your UI framework (recommended)
1. Implement Key Views for app
1. User accounts: registration, login, logout, administration
1. Background processing if needed
1. Google Maps if needed
1. Deployment to Heroku
1. Implement continuous integration and/or deployment
