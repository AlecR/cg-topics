---
title: nT Test Interface
---
#### Test Interface

The Test Interface essentially is a set of URLs which invoke special functionality that allows your nanoTwitter to be tested from a browser, and is the foundation of the scalability testing we will be doing.

##### The Test user

There's a user that we use as part of many of the tests. We refer to the user as "testuser". When you create that user use the following attributes:

* name: testuser
* email: testuser@sample.com
* password: "password"

#### Test Data
* Url to reset and load the standard seed is: /test/reset/standard?tweets=n&users=u&follows=u
* Dataset is the standard <%= link_to_topic :nt_seed_data %>
* If necessary, you may modify the creation dates of tweets, but all the other data should be intact
* Note that in our tests, n will be 7000 or less

##### Here are the URLs of the test interface

* POST /test/reset/all
  * If needed deletes all users, tweets, follows
  * Recreates TestUser
  * Example: `test/reset/all`
* POST /test/reset/testuser
  * Deletes and recreates TestUser, including all his tweets, follows, and removes him from any other users' follow list.
  * Example: `/test/reset/testuser`
* POST /test/reset/standard
  * If needed deletes all users, tweets, follows
  * Recreates TestUser
  * Loads the test data - see above
* GET /test/status
  * One page "report":
    * How many users, follows, and tweets are there
    * What is the TestUser's id
  * Example: `/test/status`
* GET /test/version
  * Displays the version number of this build
  * Useful as a way to make sure whether you have the latest
  * Disaplays version as json
  * Example: `test/version
* POST /test/reset/standard?tweets=n&users=u&follows=f
  * Deletes all users, tweets and follows
  * Recreate TestUser
  * Imports the complete set of standard seed data, see: <%= link_to_topic :nt_seed_data %>
  * If tweets parameters areincluded, follow them
  * Example: `/test/reset/standard?users=100&tweets=100&follows=5`
* POST /test/users/create?count=u&tweets=c
  * create `u` (integer) fake Users using faker. Defaults to 1.
  * each of those users gets `c` (integer) fake tweets. Defaults to zero.
  * Example: `/test/users/create?count=100&tweets=5`
* POST /test/user/u/tweets?count=t
  * user `u` generates `t`(integer) new fake tweets
  * if u="testuser" then this refers to the TestUser
  * Example: `/test/user/testuser/tweets?tweets=100`
* POST /test/user/u/follow?count=n
  * `n` (integer) randomly selected users follow user `u` (integer)
  * if u="testuser" then this refers to the TestUser
  * Example: `/test/user/22/follow?count=10`
* POST /test/user/follow?count=n
  * `n` (integer) randomly selected users follow 'n' (integer) different randomlt seleted users.
  * Example: `/test/user/follow?count=10`
