---
title: "3: Topics"
desc: What are topics, how are they used. How do messages fit in
---
* Nodes talk to each other with Topics
* A node can "publish" a topic
* Another node can "subscribe" to a topic
  * The two nodes don't know about each other
  * A node can subscribe to a topic that no one is publishing
  * Two nodes can publish the same topic with no one subscribing
  * etc. etc. etc.
* What is being published and subscribed?
  * messages
  * A message is a data structure with named and typed fields
  * A collection of messages already exists, e.g. Int32, which is message with one element, a 32 bit integer.

#### Publishing a topic  
<%= include_python :topic_publisher %>

###### Try it out
* Create the simple program above
* Run it
* Examine that it is publishing as expected

<%= code_begin %>
# shell commands
$ cs
$ catkin_create_package basics
$ cm
$ roscd basics

# create the file and call it topic_publisher.py

$ chmod +x topic_publisher.py
$ rosrun basics topic_publisher.py
$ rostopic list
$ rostopic echo counter -n 5
<%= code_end %>

#### Subscribing to a topic
<%= include_python :topic_subscriber %>

##### Try it out
* Create the program above
* Defines and runs a node
* Subscribing to the counter, and printing it

<%= code_begin %>
# shell commands
$ chmod +x topic_subscriber.py
$ roscd basics
$ rosrun basics topic_subscriber
<%= code_end %>