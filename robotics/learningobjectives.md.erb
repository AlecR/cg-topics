---
title: Learning Objectives
---
##### Learning Objectives

The purpose of this course is to improve students’ understanding of the computer science and engineering of robotics, getting exposure to some of the big ideas, algorithms and structures that come into play. Students will work in small teams and with little guidance to investigate how to address certain challenges, and be highly self-sufficient and motivated to drive projects to their conclusion.

#### Outcomes

* Students will be able to demonstrate understanding of how a simple wheeled robot works, how to control it through software, learning some key algorithms along the way, and implementing the code for a series of more and complicated challenges.

* Students will learn to program the all-important “Robot Operating System”, ROS, which is the leading real-time distributed operating system for research and industrial robotics. They will demonstrate understanding of the key concepts of ROS, nodes, topics, commands and services.

* Students will demonstrate effective working in teams, designing new algorithms and solving problems of navigation and robotics, brainstorming, collaborating, implementing, testing and demonstrating the results of their work.

* Students will learn and demonstrate professional and agile software entgineering processes, including writing elegant, readable, documented code, working in rapid iterations, each with a goal and a demo, and performing weekly standups.

#### Commentary

The first ever students of this course, in Fall of 2017, reported these as their learnings (that would still be with them in 5 years)

1. ROS concepts: nodes, publish, subscribe, ROSCOre, etc. (6)
1. Importance of debugging and testing with simulation and how to do it (4)
1. Effective working with a technical team: communication, documentation, formulating points of view. Giving live demos to teammates (4)
1. Accepting that what happens in reality often doesn’t match what should happen in theory (3)
1. Ability to dig into detailed technical documentation to get answers. Experimenting with different possible solutions and trying different approaches before pivoting. How to build a system by combining different frameworks and libraries (3)
1. What Robotics is all about.  Navigation and Localization in mobile robotics (2)
1. Basics of agile: stories, ranking, standups, tracking progress, etc. (2)
1. Linux. How a distributed operating system frameworks (2)
1. Web API: how to design one and how a web server works
10. Architectural thinking: breaking problem into pieces, prioritize and modularize
