---
title: Object Oriented Language Features
---
#### Object Oriented Language Features

##### Classes
* classes: How do you decide what a class is and what it is not?
* classes and objects
* instance variables
* constructor (no destructor in Ruby!)

##### Methods
* methods: private/public
* Polymorphism
* "Duck" typing.
* Do you see how duck typing is an alternative/complement to inheritence?
* Consider a method like #can_speak? in a gaming application

##### Inheritance
* inheritence: rarely is this the best solution
* composition and delegation: a better solution

